var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/guide/intro/",title:"简介",description:`olive 是一款强大的直播录制引擎。它会时刻监控着主播的直播状态，并在主播上线时自动开启录制。帮助您捕捉到每一场直播内容。
如果您有新的功能特性要支持或发现了 bug，请去往 issues 板块。如果您有什么问题或想法，请去往 discussions 板块。`,content:`olive 是一款强大的直播录制引擎。它会时刻监控着主播的直播状态，并在主播上线时自动开启录制。帮助您捕捉到每一场直播内容。
如果您有新的功能特性要支持或发现了 bug，请去往 issues 板块。如果您有什么问题或想法，请去往 discussions 板块。
`}),e.add({id:1,href:"/docs/guide/usage/",title:"安装使用",description:`安装部署 # 您可以通过以下 3 种方式中的任意一种来安装 olive：
源码安装
go install github.com/go-olive/olive@latest 二进制安装
docker 镜像
docker pull luxcgo/olive@latest 快速开始 # 只需要传入直播间网址就可以让 olive 开始工作。
olive run -u https://www.huya.com/518512 进阶使用 # 通过使用配置文件启动 olive , 该文件为您提供了更多的选项。
模板文件参考: config.toml
olive run -f /path/to/config.toml /path/to/config.toml 指的是config.toml配置文件的绝对路径
帮助功能 # 如果有任何不懂得命令，都可以执行help命令获得帮助，🌰 如下
olive help olive help run `,content:`安装部署 # 您可以通过以下 3 种方式中的任意一种来安装 olive：
源码安装
go install github.com/go-olive/olive@latest 二进制安装
docker 镜像
docker pull luxcgo/olive@latest 快速开始 # 只需要传入直播间网址就可以让 olive 开始工作。
olive run -u https://www.huya.com/518512 进阶使用 # 通过使用配置文件启动 olive , 该文件为您提供了更多的选项。
模板文件参考: config.toml
olive run -f /path/to/config.toml /path/to/config.toml 指的是config.toml配置文件的绝对路径
帮助功能 # 如果有任何不懂得命令，都可以执行help命令获得帮助，🌰 如下
olive help olive help run `}),e.add({id:2,href:"/docs/guide/web/",title:"网页端",description:`demo 网站：只作为样例演示，请务必不要修改账号密码
除了以后端服务的方式运行，您还可以部署网页端的服务。
该服务已打包成docker 镜像
# 保存以下内容为本地文件，文件名\`docker-compose.yaml\` # 并执行以下命令 docker-compose up -d olive-db docker-compose up -d olive-server docker-compose up -d olive-portal version: \u0026quot;3.8\u0026quot; services: olive-db: image: postgres:14-alpine container_name: olive-db restart: always ports: - 127.0.0.1:5432:5432 environment: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres volumes: - ./pgdata:/var/lib/postgresql/data networks: - olive-network olive-server: image: luxcgo/olive:latest container_name: olive-server depends_on: - olive-db ports: - 127.0.0.1:3000:3000 - 127.0.0.1:4000:4000 command: [ \u0026quot;./olive\u0026quot;, \u0026quot;server\u0026quot;, \u0026quot;--db-host\u0026quot;, \u0026quot;olive-db:5432\u0026quot;, \u0026quot;-l\u0026quot;, \u0026quot;/downloads\u0026quot;, \u0026quot;-s\u0026quot;, \u0026quot;/downloads\u0026quot; ] volumes: - \u0026quot;/etc/timezone:/etc/timezone:ro\u0026quot; - \u0026quot;/etc/localtime:/etc/localtime:ro\u0026quot; - .`,content:` demo 网站：只作为样例演示，请务必不要修改账号密码
除了以后端服务的方式运行，您还可以部署网页端的服务。
该服务已打包成docker 镜像
# 保存以下内容为本地文件，文件名\`docker-compose.yaml\` # 并执行以下命令 docker-compose up -d olive-db docker-compose up -d olive-server docker-compose up -d olive-portal version: \u0026quot;3.8\u0026quot; services: olive-db: image: postgres:14-alpine container_name: olive-db restart: always ports: - 127.0.0.1:5432:5432 environment: POSTGRES_USER: postgres POSTGRES_PASSWORD: postgres volumes: - ./pgdata:/var/lib/postgresql/data networks: - olive-network olive-server: image: luxcgo/olive:latest container_name: olive-server depends_on: - olive-db ports: - 127.0.0.1:3000:3000 - 127.0.0.1:4000:4000 command: [ \u0026quot;./olive\u0026quot;, \u0026quot;server\u0026quot;, \u0026quot;--db-host\u0026quot;, \u0026quot;olive-db:5432\u0026quot;, \u0026quot;-l\u0026quot;, \u0026quot;/downloads\u0026quot;, \u0026quot;-s\u0026quot;, \u0026quot;/downloads\u0026quot; ] volumes: - \u0026quot;/etc/timezone:/etc/timezone:ro\u0026quot; - \u0026quot;/etc/localtime:/etc/localtime:ro\u0026quot; - ./downloads:/downloads - ./config:/config networks: - olive-network olive-portal: image: luxcgo/olive-portal:latest container_name: olive-portal depends_on: - olive-server ports: - \u0026quot;8080:8080\u0026quot; volumes: - ./config/default.conf:/etc/nginx/conf.d/default.conf networks: - olive-network networks: olive-network: `}),e.add({id:3,href:"/docs/guide/config/",title:"配置文件",description:"详解 # ",content:"详解 # "}),e.add({id:4,href:"/docs/guide/",title:"使用指南",description:"用户使用指南",content:""}),e.add({id:5,href:"/docs/guide/history/",title:"更新历史",description:`0.5.0 # 此版本命令和配置文件有不兼容更新
支持 docker, k8s 部署 内置 golang 原生 biliup 模块 支持 web 端部署 配置文件改动实时监控 olivetv 仓库合并到 olive 仓库 docker 版本内置 streamlink zsh yt-dlp 无需冗余安装 0.3.3 # 此版本依然坚挺，可以正常使用`,content:`0.5.0 # 此版本命令和配置文件有不兼容更新
支持 docker, k8s 部署 内置 golang 原生 biliup 模块 支持 web 端部署 配置文件改动实时监控 olivetv 仓库合并到 olive 仓库 docker 版本内置 streamlink zsh yt-dlp 无需冗余安装 0.3.3 # 此版本依然坚挺，可以正常使用
`}),e.add({id:6,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()